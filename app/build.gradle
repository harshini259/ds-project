/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.google.protobuf' version '0.8.18'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.21.7"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.49.2'
    }
  }
  generateProtoTasks {
    all() *.plugins {
      grpc {}
    }
  }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    runtimeOnly 'io.grpc:grpc-netty-shaded:1.49.2'
    implementation 'io.grpc:grpc-protobuf:1.49.2'
    implementation 'io.grpc:grpc-stub:1.49.2'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
    implementation 'org.apache.logging.log4j:log4j-api:2.7'
    implementation 'org.apache.logging.log4j:log4j-core:2.7'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.7'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.0'
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': ''
    }
    archiveBaseName = 'all-in-one-jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}